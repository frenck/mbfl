# Makefile.ds --
#

#PAGE
## ------------------------------------------------------------
## Search paths and programs.
## ------------------------------------------------------------

vpath	%.m4		$(top_srcdir)/macros
vpath	%.sh.m4		$(top_srcdir)/modules
vpath	%.sh.m4		$(top_srcdir)/lib
vpath	%.sh.m4		$(top_srcdir)/examples
vpath	%.sh.m4		$(builddir)


MBFLPP	= MBFL_LIBRARY=$(top_srcdir)/infrastructure/libmbfl.sh \
		$(BASH) $(top_srcdir)/infrastructure/mbflpp.sh		\
		--include=$(top_srcdir)/macros				\
		--include=$(modules_BUILDDIR)				\
		--library=preprocessor.m4	 			\
		--define=__PKGDATADIR__=$(pkgdatadir)			\
		--define=__PACKAGE_NAME__=$(PACKAGE_NAME)		\
		--define=__PACKAGE_VERSION__=$(PACKAGE_XVERSION)

#PAGE
## ------------------------------------------------------------
## Modules rules.
## ------------------------------------------------------------

MODULES			= base encode file getopts message program signal \
			  string dialog main variable system interfaces

modules_SRCDIR		= $(top_srcdir)/modules
DS_BUILDDIR(modules)

modules_SOURCES		= $(foreach m, $(MODULES), $(modules_SRCDIR)/$(m).sh.m4)
modules_TARGETS		= $(call ds-replace-dir, $(modules_BUILDDIR)/, \
				$(modules_SOURCES:.sh.m4=.sh))

modules_CLEANFILES	= $(modules_TARGETS)
modules_REALCLEANFILES	= $(modules_CLEANFILES)

DS_SECTION_NO_INSTALL(modules, library)

$(modules_TARGETS): $(modules_BUILDDIR)/%.sh: $(modules_SRCDIR)/%.sh.m4 preprocessor.m4
	$(MBFLPP) <$(<) >$(@)

#page
## ------------------------------------------------------------
## Library rules.
## ------------------------------------------------------------

LIBNAME			= libmbfl.sh
LIBRARIES		= $(top_srcdir)/lib/libmbfltest.sh

library_TARGETS		= $(LIBNAME)
library_INSTLST		= $(library_TARGETS) $(LIBRARIES)
library_INSTDIR		= $(pkgdatadir)

library_CLEANFILES	= $(library_TARGETS)
library_REALCLEANFILES	= $(library_CLEANFILES)

DS_SECTION(library, bin, DATA)

$(LIBNAME): libmbfl.sh.m4 preprocessor.m4 $(modules_TARGETS)
	$(MBFLPP) --show-program --preserve-comments <$(<) >$(@)

#page
## ------------------------------------------------------------
## Script rules.
## ------------------------------------------------------------

script_TARGETS		= mbflpp.sh mbfltest.sh
script_INSTLST		= mbfl-config mbflpp.sh mbfltest.sh
script_INSTDIR		= $(pkglibexecdir)

script_CLEANFILES	= $(script_TARGETS)
script_REALCLEANFILES	= $(script_CLEANFILES)

DS_SECTION(script, bin, BIN)

script-install-sub:
AM_INSTALL_DIR($(bindir))
	cd $(INSTALL_ROOT)$(bindir) && \
	$(SYMLINK) ../libexec/$(PKG_DIR)/mbfl-config mbfl-config
	cd $(INSTALL_ROOT)$(bindir) && \
	$(SYMLINK) ../libexec/$(PKG_DIR)/mbflpp.sh mbflpp.sh
	cd $(INSTALL_ROOT)$(bindir) && \
	$(SYMLINK) ../libexec/$(PKG_DIR)/mbfltest.sh mbfltest.sh

mbflpp.sh: $(top_srcdir)/scripts/mbflpp.sh
	$(MBFLPP) --preserve-comments <$(<) >$(@)

mbfltest.sh: $(top_srcdir)/scripts/mbfltest.sh
	$(MBFLPP) --preserve-comments <$(<) >$(@)

#page
## ------------------------------------------------------------
## Preprocessor macros rules.
## ------------------------------------------------------------

macros_INSTLST		= $(top_srcdir)/macros/preprocessor.m4
macros_INSTDIR		= $(pkgdatadir)

DS_SECTION(macros, bin, DATA)

#PAGE
## ------------------------------------------------------------
## Template rules.
## ------------------------------------------------------------

template_INSTLST	= $(call ds-files-from-dir, $(top_srcdir)/examples)
template_INSTDIR	= $(pkgexampledir)

DS_SECTION(template, doc, DATA)

#page
## ------------------------------------------------------------
## Test rules.
## ------------------------------------------------------------

testdir		= $(top_srcdir)/tests
test_FILES	= $(wildcard $(testdir)/*.test)
test_TARGETS	= test-all

test_ENV	= PATH=$(builddir):$(testdir):$(top_srcdir)/lib:$(PATH)
test_ENV	+= builddir=$(builddir) top_srcdir=$(top_srcdir)
test_CMD	= $(test_ENV) /bin/bash

.PHONY: test-all test-all-verbose

test-all:
ifneq ($(strip $(test_FILES)),)
	@$(foreach f, $(test_FILES), \
	top_srcdir=$(top_srcdir); $(test_CMD) $(f);)
endif

test-all-verbose:
ifneq ($(strip $(test_FILES)),)
	@$(foreach f, $(test_FILES), top_srcdir=$(top_srcdir); \
	TESTSUCCESS='yes' TESTSTART='yes' $(test_CMD) $(f);)
endif

#page
## ------------------------------------------------------------
## Update targets.
## ------------------------------------------------------------

.PHONY: update-infrastructure

update-infrastructure: libmbfl.sh mbflpp.sh
	$(CP) $(^) $(top_srcdir)/infrastructure/


### end of file
# Local Variables:
# mode: makefile
# End:
