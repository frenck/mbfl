# file.test --
# 
# Part of: Marco's BASH Functions Library
# Contents: tests for file module
# Date: Sun Apr 20, 2003
# 
# Abstract
# 
#	This file must be executes through "all.tcl": from the build
#	directory:
#
#		$ make all test TESTFLAGS="-match file-*"
# 
#	will select these tests.
#
# Copyright (c) 2003, 2004 Marco Maggi
# 
# This is free software; you  can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the
# Free Software  Foundation; either version  2.1 of the License,  or (at
# your option) any later version.
# 
# This library  is distributed in the  hope that it will  be useful, but
# WITHOUT   ANY  WARRANTY;   without  even   the  implied   warranty  of
# MERCHANTABILITY  or FITNESS  FOR A  PARTICULAR PURPOSE.   See  the GNU
# Lesser General Public License for more details.
# 
# You  should have  received a  copy of  the GNU  Lesser  General Public
# License along  with this library; if  not, write to  the Free Software
# Foundation, Inc.,  59 Temple Place,  Suite 330, Boston,  MA 02111-1307
# USA
# 

#PAGE
## ------------------------------------------------------------
## Setup.
## ------------------------------------------------------------

source [file join [file dirname [info script]] setup.tcl]

#PAGE
## ---------------------------------------------------------
## Test namespace.
## ---------------------------------------------------------

namespace eval ::test {

    variable	libname	[file join $libpath file.sh]
    variable	precmd ". %s"
    set precmd [format $precmd $libname]

#PAGE

::tcltest::test file-1.1 "file extension" {
    -body	{
	bash "mbfl_file_extension /path/to/file.ext"
    }
    -result ext
}

::tcltest::test file-1.2 "file extension" {
    -body	{
	bash "mbfl_file_extension /path/to/file."
    }
    -result {}
}

::tcltest::test file-1.3 "file extension" {
    -body	{
	bash "mbfl_file_extension /path/to/file"
    }
    -result {}
}

::tcltest::test file-1.4 "file extension" {
    -body	{
	bash "mbfl_file_extension /path/to/file.ext/ab"
    }
    -result {}
}

::tcltest::test file-1.5 "file extension" {
    -body	{
	bash "mbfl_file_extension /path/to/some.file.ext"
    }
    -result ext
}

::tcltest::test file-1.6 "file extension" {
    -body	{
	bash "mbfl_file_extension a"
    }
    -result {}
}

#PAGE

::tcltest::test file-2.1 "file dirname" {
    -body	{
	bash "mbfl_file_dirname /path/to/file.ext"
    }
    -result "/path/to"
}

::tcltest::test file-2.2 "file dirname" {
    -body	{
	bash "mbfl_file_dirname file.ext"
    }
    -result .
}

::tcltest::test file-2.3 "file dirname" {
    -body	{
	bash "mbfl_file_dirname /file.ext"
    }
    -result /
}

::tcltest::test file-2.4 "file dirname" {
    -body	{
	bash "mbfl_file_dirname //file.ext"
    }
    -result /
}

::tcltest::test file-2.5 "file dirname" {
    -body	{
	bash "mbfl_file_dirname /path/to///file.ext"
    }
    -result "/path/to"
}

::tcltest::test file-2.6 "file dirname" {
    -body	{
	bash "mbfl_file_dirname //////file.ext"
    }
    -result "/"
}

::tcltest::test file-2.7 "file dirname" {
    -body	{
	bash "mbfl_file_dirname a/b"
    }
    -result "a"
}

::tcltest::test file-2.8 "file dirname" {
    -body	{
	bash "mbfl_file_dirname a"
    }
    -result "."
}

::tcltest::test file-2.9 "file dirname" {
    -body	{
	bash "mbfl_file_dirname ../a"
    }
    -result ".."
}

::tcltest::test file-2.10 "file dirname" {
    -body	{
	bash "mbfl_file_dirname ./a"
    }
    -result "."
}

::tcltest::test file-2.11 "file dirname" {
    -body	{
	bash "mbfl_file_dirname ../abcd"
    }
    -result ".."
}

::tcltest::test file-2.12 "file dirname" {
    -body	{
	bash "mbfl_file_dirname ./abcd"
    }
    -result "."
}

::tcltest::test file-2.13 "file dirname" {
    -body	{
	bash "mbfl_file_dirname ../abcd/efgh"
    }
    -result "../abcd"
}

::tcltest::test file-2.14 "file dirname" {
    -body	{
	bash "mbfl_file_dirname ./abcd/efgh"
    }
    -result "./abcd"
}

#PAGE

::tcltest::test file-3.1 "file normalise" {
    -setup	{
	::tcltest::makeDirectory [file join $tmpdir a b c]
    }
    -body	{
	bash "cd $tmpdir; mbfl_file_normalise [file join a b]"
    }
    -result "[file join $tmpdir a b]"
    -cleanup	{
	::tcltest::removeDirectory $tmpdir
    }
}

::tcltest::test file-3.2 "file normalise" {
    -body	{
	bash "mbfl_file_normalise /path/to/file.ext"
    }
    -result "/path/to/file.ext"
}

::tcltest::test file-3.3 "file normalise" {
    -body	{
	bash "mbfl_file_normalise [file join a b] wo"
    }
    -result "[file join wo a b]"
}

::tcltest::test file-3.4 "file normalise" {
    -setup	{
	::tcltest::makeDirectory [file join $tmpdir a b c]
    }
    -body	{
	bash "cd $tmpdir; mbfl_file_normalise [file join a b] $tmpdir"
    }
    -result "[file join $tmpdir a b]"
    -cleanup	{
	::tcltest::removeDirectory $tmpdir
    }
}

::tcltest::test file-3.5 "file normalise" {
    -setup	{
	::tcltest::makeDirectory [file join $tmpdir a b c]
    }
    -body	{
	bash "cd $tmpdir; mbfl_file_normalise [file join a b c ..] $tmpdir"
    }
    -result "[file join $tmpdir a b]"
    -cleanup	{
	::tcltest::removeDirectory $tmpdir
    }
}

::tcltest::test file-3.6 "file normalise" {
    -setup	{
	::tcltest::makeDirectory [file join $tmpdir a b c]
    }
    -body	{
	bash "cd $tmpdir; mbfl_file_normalise [file join a . b . c] $tmpdir"
    }
    -result "[file join $tmpdir a b c]"
    -cleanup	{
	::tcltest::removeDirectory $tmpdir
    }
}

::tcltest::test file-3.7 "file normalise" {
    -setup	{
	::tcltest::makeDirectory [file join $tmpdir a b c]
    }
    -body	{
	bash "cd $tmpdir; mbfl_file_normalise [file join a b c .. ..] $tmpdir"
    }
    -result "[file join $tmpdir a]"
    -cleanup	{
	::tcltest::removeDirectory $tmpdir
    }
}

::tcltest::test file-3.8 "file normalise" {
    -setup	{
	::tcltest::makeDirectory [file join $tmpdir a b c]
    }
    -body	{
	bash "cd [file join $tmpdir a b]; mbfl_file_normalise [file join .. b]"
    }
    -result "[file join $tmpdir a b]"
    -cleanup	{
	::tcltest::removeDirectory $tmpdir
    }
}

#PAGE

::tcltest::test file-4.1 "file rootname" {
    -body	{
	bash "mbfl_file_rootname /path/to/file.ext"
    }
    -result "/path/to/file"
}

::tcltest::test file-4.2 "file rootname" {
    -body	{
	bash "mbfl_file_rootname /path/to/file"
    }
    -result "/path/to/file"
}

::tcltest::test file-4.3 "file rootname" {
    -body	{
	bash "mbfl_file_rootname /path/to/ab.cd/file"
    }
    -result "/path/to/ab.cd/file"
}

::tcltest::test file-4.4 "file rootname" {
    -body	{
	bash "mbfl_file_rootname .wow"
    }
    -result ".wow"
}

::tcltest::test file-4.5 "file rootname" {
    -body	{
	bash "mbfl_file_rootname a"
    }
    -result "a"
}

#PAGE

::tcltest::test file-5.1 "file split" {
    -body	{
	bash "mbfl_file_split /path/to/file.ext"
    }
    -result "*path\nto\nfile.ext"
    -match glob
}

::tcltest::test file-5.2 "file split" {
    -body	{
	bash "mbfl_file_split a"
    }
    -result "a"
    -match glob
}

#PAGE

::tcltest::test file-6.1 "file tail" {
    -body	{
	bash "mbfl_file_tail /path/to/file.ext"
    }
    -result "file.ext"
}

::tcltest::test file-6.2 "file tail" {
    -body	{
	bash "mbfl_file_tail /path/to/"
    }
    -result {}
}

::tcltest::test file-6.3 "file tail" {
    -body	{
	bash "mbfl_file_tail file.ext"
    }
    -result "file.ext"
}


#PAGE
## ---------------------------------------------------------
## End of "::test" namespace.
## ---------------------------------------------------------

::tcltest::cleanupTests
}
namespace delete ::test


### end of file
# Local Variables:
# mode: tcl
# page-delimiter: "^#PAGE"
# End:
